<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zzk31的博客小站</title>
  
  <subtitle>问渠哪得清如许，为有源头活水来</subtitle>
  <link href="https://zzk31.320.io/atom.xml" rel="self"/>
  
  <link href="https://zzk31.320.io/"/>
  <updated>2021-03-05T10:43:36.365Z</updated>
  <id>https://zzk31.320.io/</id>
  
  <author>
    <name>zzk31</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于SBX 和 Polynomial Mutation的一点知识</title>
    <link href="https://zzk31.320.io/students/%E5%85%B3%E4%BA%8ESBX-%E5%92%8C-Polynomial-Mutation%E7%9A%84%E4%B8%80%E7%82%B9%E7%9F%A5%E8%AF%86/"/>
    <id>https://zzk31.320.io/students/%E5%85%B3%E4%BA%8ESBX-%E5%92%8C-Polynomial-Mutation%E7%9A%84%E4%B8%80%E7%82%B9%E7%9F%A5%E8%AF%86/</id>
    <published>2020-12-20T06:35:57.000Z</published>
    <updated>2021-03-05T10:43:36.365Z</updated>
    
    <content type="html"><![CDATA[<h3 id="关于SBX-和-Polynomial-Mutation的一点知识"><a href="#关于SBX-和-Polynomial-Mutation的一点知识" class="headerlink" title="关于SBX 和 Polynomial Mutation的一点知识"></a>关于SBX 和 Polynomial Mutation的一点知识</h3><h4 id="1-SBX-（Simulated-Binary-Crossover）"><a href="#1-SBX-（Simulated-Binary-Crossover）" class="headerlink" title="1.SBX （Simulated Binary Crossover）"></a>1.SBX （Simulated Binary Crossover）</h4><blockquote><p>SBX是模拟二进制编码的遗传算法中的单点交叉 </p></blockquote><ol><li><p>Select two parents $p_1 $ and $ p_2$</p></li><li><p>Generate a uniform distribution random number $u \in [0,1) $</p></li><li><p>Calculate $\beta$ </p></li></ol><script type="math/tex; mode=display">   \beta=\begin{Bmatrix}   (2u)^\frac{1}{\eta+1}, \quad if\quad u \leq 0.5\\   (\frac{1}{2-2u})^\frac{1}{\eta+1},\quad if\quad u > 0.5   \end{Bmatrix}</script><p>   where $\eta$ is  the Spread Factor distribution index. Set $\eta$ to 20 in MOEAs generally.</p><ol><li>Compute offspring as </li></ol><script type="math/tex; mode=display">c_1 = \frac{1}{2}(p_1+p_2) - \frac{1}{2}\beta(p_1-p_2)\\c_2 = \frac{1}{2}(p_1+p_2) + \frac{1}{2}\beta(p_1-p_2)</script><h5 id="Java代码实现（Author-Antonio-J-Nebro-Juan-J-Durillo）"><a href="#Java代码实现（Author-Antonio-J-Nebro-Juan-J-Durillo）" class="headerlink" title="Java代码实现（Author:Antonio J. Nebro ,  Juan J. Durillo）"></a>Java代码实现（Author:Antonio J. Nebro ,  Juan J. Durillo）</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  Author:</span></span><br><span class="line"><span class="comment">//       Antonio J. Nebro &lt;antonio@lcc.uma.es&gt;</span></span><br><span class="line"><span class="comment">//       Juan J. Durillo &lt;durillo@lcc.uma.es&gt;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Copyright (c) 2011 Antonio J. Nebro, Juan J. Durillo</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  This program is free software: you can redistribute it and/or modify</span></span><br><span class="line"><span class="comment">//  it under the terms of the GNU Lesser General Public License as published by</span></span><br><span class="line"><span class="comment">//  the Free Software Foundation, either version 3 of the License, or</span></span><br><span class="line"><span class="comment">//  (at your option) any later version.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  This program is distributed in the hope that it will be useful,</span></span><br><span class="line"><span class="comment">//  but WITHOUT ANY WARRANTY; without even the implied warranty of</span></span><br><span class="line"><span class="comment">//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></span><br><span class="line"><span class="comment">//  GNU Lesser General Public License for more details.</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">//  You should have received a copy of the GNU Lesser General Public License</span></span><br><span class="line"><span class="comment">//  along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.  </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Solution[] doCrossover(<span class="keyword">double</span> probability,</span><br><span class="line">                                  Solution parent1,</span><br><span class="line">                                  Solution parent2) <span class="keyword">throws</span> JMException &#123;</span><br><span class="line"></span><br><span class="line">        Solution[] offSpring = <span class="keyword">new</span> Solution[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        offSpring[<span class="number">0</span>] = <span class="keyword">new</span> Solution(parent1);</span><br><span class="line">        offSpring[<span class="number">1</span>] = <span class="keyword">new</span> Solution(parent2);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">double</span> rand;</span><br><span class="line">        <span class="keyword">double</span> y1, y2, yL, yu;</span><br><span class="line">        <span class="keyword">double</span> c1, c2;</span><br><span class="line">        <span class="keyword">double</span> alpha, beta, betaq;</span><br><span class="line">        <span class="keyword">double</span> valueX1, valueX2;</span><br><span class="line">        XReal x1 = <span class="keyword">new</span> XReal(parent1);</span><br><span class="line">        XReal x2 = <span class="keyword">new</span> XReal(parent2);</span><br><span class="line">        XReal offs1 = <span class="keyword">new</span> XReal(offSpring[<span class="number">0</span>]);</span><br><span class="line">        XReal offs2 = <span class="keyword">new</span> XReal(offSpring[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> numberOfVariables = x1.getNumberOfDecisionVariables();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (PseudoRandom.randDouble() &lt;= probability) &#123;</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; numberOfVariables; i++) &#123;</span><br><span class="line">                valueX1 = x1.getValue(i);</span><br><span class="line">                valueX2 = x2.getValue(i);</span><br><span class="line">                <span class="keyword">if</span> (PseudoRandom.randDouble() &lt;= <span class="number">0.5</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (java.lang.Math.abs(valueX1 - valueX2) &gt; EPS) &#123;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (valueX1 &lt; valueX2) &#123;</span><br><span class="line">                            y1 = valueX1;</span><br><span class="line">                            y2 = valueX2;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            y1 = valueX2;</span><br><span class="line">                            y2 = valueX1;</span><br><span class="line">                        &#125; <span class="comment">// if</span></span><br><span class="line"></span><br><span class="line">                        yL = x1.getLowerBound(i);</span><br><span class="line">                        yu = x1.getUpperBound(i);</span><br><span class="line">                        rand = PseudoRandom.randDouble();</span><br><span class="line">                        beta = <span class="number">1.0</span> + (<span class="number">2.0</span> * (y1 - yL) / (y2 - y1));</span><br><span class="line">                        alpha = <span class="number">2.0</span> - java.lang.Math.pow(beta, -(distributionIndex_ + <span class="number">1.0</span>));</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (rand &lt;= (<span class="number">1.0</span> / alpha)) &#123;</span><br><span class="line">                            betaq = java.lang.Math.pow((rand * alpha), (<span class="number">1.0</span> / (distributionIndex_ + <span class="number">1.0</span>)));</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            betaq = java.lang.Math.pow((<span class="number">1.0</span> / (<span class="number">2.0</span> - rand * alpha)), (<span class="number">1.0</span> / (distributionIndex_ + <span class="number">1.0</span>)));</span><br><span class="line">                        &#125; <span class="comment">// if</span></span><br><span class="line"></span><br><span class="line">                        c1 = <span class="number">0.5</span> * ((y1 + y2) - betaq * (y2 - y1));</span><br><span class="line">                        beta = <span class="number">1.0</span> + (<span class="number">2.0</span> * (yu - y2) / (y2 - y1));</span><br><span class="line">                        alpha = <span class="number">2.0</span> - java.lang.Math.pow(beta, -(distributionIndex_ + <span class="number">1.0</span>));</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (rand &lt;= (<span class="number">1.0</span> / alpha)) &#123;</span><br><span class="line">                            betaq = java.lang.Math.pow((rand * alpha), (<span class="number">1.0</span> / (distributionIndex_ + <span class="number">1.0</span>)));</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            betaq = java.lang.Math.pow((<span class="number">1.0</span> / (<span class="number">2.0</span> - rand * alpha)), (<span class="number">1.0</span> / (distributionIndex_ + <span class="number">1.0</span>)));</span><br><span class="line">                        &#125; <span class="comment">// if</span></span><br><span class="line"></span><br><span class="line">                        c2 = <span class="number">0.5</span> * ((y1 + y2) + betaq * (y2 - y1));</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (c1 &lt; yL)</span><br><span class="line">                            c1 = yL;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (c2 &lt; yL)</span><br><span class="line">                            c2 = yL;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (c1 &gt; yu)</span><br><span class="line">                            c1 = yu;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (c2 &gt; yu)</span><br><span class="line">                            c2 = yu;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (PseudoRandom.randDouble() &lt;= <span class="number">0.5</span>) &#123;</span><br><span class="line">                            offs1.setValue(i, c2);</span><br><span class="line">                            offs2.setValue(i, c1);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            offs1.setValue(i, c1);</span><br><span class="line">                            offs2.setValue(i, c2);</span><br><span class="line">                        &#125; <span class="comment">// if</span></span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        offs1.setValue(i, valueX1);</span><br><span class="line">                        offs2.setValue(i, valueX2);</span><br><span class="line">                    &#125; <span class="comment">// if</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    offs1.setValue(i, valueX2);</span><br><span class="line">                    offs2.setValue(i, valueX1);</span><br><span class="line">                &#125; <span class="comment">// if</span></span><br><span class="line">            &#125; <span class="comment">// if</span></span><br><span class="line">        &#125; <span class="comment">// if</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> offSpring;</span><br><span class="line">    &#125; <span class="comment">// doCrossover</span></span><br></pre></td></tr></table></figure><h3 id="Polynomial-Mutation"><a href="#Polynomial-Mutation" class="headerlink" title="Polynomial Mutation"></a>Polynomial Mutation</h3><p>多项式变异公式：</p><script type="math/tex; mode=display">x(t+1)=x(t) + \delta(y_u-y_l)</script><script type="math/tex; mode=display">\delta_j = \begin{Bmatrix}[2u+(1-2u)(1-\delta_1)^{\eta+1}]^\frac{1}{\eta+1}, \qquad  \qquad \quad if\quad u \leq 0.5\\1-[2(1-u)+2(u-0.5)(1-\delta_2)^{\eta+1}]^{\frac{1}{\eta+1}}, if \quad u > 0.5 \\\end{Bmatrix}</script><p>其中，$u$是一个随机数，$u\in[0,1)$ ,  $\eta$ 是分布指数,    $\delta_1$,  $\delta_2$ 定义如下</p><script type="math/tex; mode=display">\delta_1=\frac{y - y_l}{y_u-y_l}</script><script type="math/tex; mode=display">\delta_2=\frac{y_u - y}{y_u-y_l}</script><p>$y$是一个变异前的一个基因（二进制编码）或者说子变量（真实编码），$y_l$ 是该基因或子变量对应的下界，$y_u$ 是该基因或子变量对应的上界</p><h4 id="Java代码实现（Author-Antonio-J-Nebro-Juan-J-Durillo）-1"><a href="#Java代码实现（Author-Antonio-J-Nebro-Juan-J-Durillo）-1" class="headerlink" title="Java代码实现（Author:Antonio J. Nebro, Juan J. Durillo）"></a>Java代码实现（Author:Antonio J. Nebro, Juan J. Durillo）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doMutation</span><span class="params">(<span class="keyword">double</span> probability, Solution solution)</span> <span class="keyword">throws</span> JMException </span>&#123;</span><br><span class="line"><span class="keyword">double</span> rnd, delta1, delta2, mut_pow, deltaq;</span><br><span class="line"><span class="keyword">double</span> y, yl, yu, val, xy;</span><br><span class="line">XReal x = <span class="keyword">new</span> XReal(solution);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> <span class="keyword">var</span> = <span class="number">0</span>; <span class="keyword">var</span> &lt; solution.numberOfVariables(); <span class="keyword">var</span>++) &#123;</span><br><span class="line"><span class="keyword">if</span> (PseudoRandom.randDouble() &lt;= probability) &#123;</span><br><span class="line">y = x.getValue(<span class="keyword">var</span>);</span><br><span class="line">yl = x.getLowerBound(<span class="keyword">var</span>);</span><br><span class="line">yu = x.getUpperBound(<span class="keyword">var</span>);</span><br><span class="line">delta1 = (y - yl) / (yu - yl);</span><br><span class="line">delta2 = (yu - y) / (yu - yl);</span><br><span class="line">rnd = PseudoRandom.randDouble();</span><br><span class="line">mut_pow = <span class="number">1.0</span> / (eta_m_ + <span class="number">1.0</span>);</span><br><span class="line"><span class="keyword">if</span> (rnd &lt;= <span class="number">0.5</span>) &#123;</span><br><span class="line">xy = <span class="number">1.0</span> - delta1;</span><br><span class="line">val = <span class="number">2.0</span> * rnd + (<span class="number">1.0</span> - <span class="number">2.0</span> * rnd) * (Math.pow(xy, (distributionIndex_ + <span class="number">1.0</span>)));</span><br><span class="line">deltaq = java.lang.Math.pow(val, mut_pow) - <span class="number">1.0</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">xy = <span class="number">1.0</span> - delta2;</span><br><span class="line">val = <span class="number">2.0</span> * (<span class="number">1.0</span> - rnd) + <span class="number">2.0</span> * (rnd - <span class="number">0.5</span>) * (java.lang.Math.pow(xy, (distributionIndex_ + <span class="number">1.0</span>)));</span><br><span class="line">deltaq = <span class="number">1.0</span> - (java.lang.Math.pow(val, mut_pow));</span><br><span class="line">&#125;</span><br><span class="line">y = y + deltaq * (yu - yl);</span><br><span class="line"><span class="keyword">if</span> (y &lt; yl)</span><br><span class="line">y = yl;</span><br><span class="line"><span class="keyword">if</span> (y &gt; yu)</span><br><span class="line">y = yu;</span><br><span class="line">x.setValue(<span class="keyword">var</span>, y);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="comment">// for</span></span><br><span class="line">&#125; <span class="comment">// doMutation</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;关于SBX-和-Polynomial-Mutation的一点知识&quot;&gt;&lt;a href=&quot;#关于SBX-和-Polynomial-Mutation的一点知识&quot; class=&quot;headerlink&quot; title=&quot;关于SBX 和 Polynomial Mutation的</summary>
      
    
    
    
    
    <category term="多目标进化优化" scheme="https://zzk31.320.io/tags/%E5%A4%9A%E7%9B%AE%E6%A0%87%E8%BF%9B%E5%8C%96%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>浅谈单例模式</title>
    <link href="https://zzk31.320.io/pattern/%E6%B5%85%E8%B0%88%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>https://zzk31.320.io/pattern/%E6%B5%85%E8%B0%88%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</id>
    <published>2020-12-20T06:32:07.000Z</published>
    <updated>2021-03-05T10:43:19.149Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浅谈单例模式"><a href="#浅谈单例模式" class="headerlink" title="浅谈单例模式"></a>浅谈单例模式</h2><h4 id="饿汉模式"><a href="#饿汉模式" class="headerlink" title="饿汉模式"></a>饿汉模式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance = <span class="keyword">new</span> Singleton();</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">newInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>缺点：在需要初始化许多对象的时候会导致系统启动较慢，比如在有许多个单例对象的容器中，启动该容器的初始过程会比较长。</p><h4 id="懒加载模式"><a href="#懒加载模式" class="headerlink" title="懒加载模式"></a>懒加载模式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance = <span class="keyword">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(instance == <span class="keyword">null</span>) &#123;</span><br><span class="line">            instance = <span class="keyword">new</span> Singleton();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>缺点：同步方法锁住了对象，降低了系统的处理速度。</p><h4 id="错误的双重锁检查"><a href="#错误的双重锁检查" class="headerlink" title="错误的双重锁检查"></a>错误的双重锁检查</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance = <span class="keyword">null</span>;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(instance == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span>(Singleton.class) &#123;</span><br><span class="line">                <span class="keyword">if</span>(instance == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    instance = <span class="keyword">new</span> Singleton();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样的写法是有问题的。在JVM中， instance = new Singleton(); 语句并不是一个原子操作，分为创建对象和引用赋值两步。其中，创建对象需要为对象分配空间，再进行初始化。以上三步，分配内存永远是第一步，但是后面两步则可能被重排序。</p><p>JVM并不保证初始化先于引用赋值的顺序，因此很可能是先创建了对象，即在Singleton实例分配了内存空间，但是还未进行初始化，然后赋值给了<code>instance</code>，这是实例虽然分配到了空间，但是其并未完成初始化，而<code>instance</code>引用却不为空，这时另一个线程抢占执行，执行了<code>getInstance（）</code>方法，便会发现<code>instance</code>不为<code>null</code>，从而直接返回了<code>instance</code>，导致系统出错。</p><h4 id="正确的双重锁检查"><a href="#正确的双重锁检查" class="headerlink" title="正确的双重锁检查"></a>正确的双重锁检查</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> Singleton instance = <span class="keyword">null</span>;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(instance == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span>(Singleton.class) &#123;</span><br><span class="line">                <span class="keyword">if</span>(instance == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    instance = <span class="keyword">new</span> Singleton();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用volatile的内存可见性可以使得<code>instance</code>不会被线程缓存，所有的线程读写该对象都需要对主内存进行操作。</p><p>volatile还可以防止指令重排序，从而使得上述的双重锁检查代码正确执行。这里的防止指令重排序是指，volatile修饰的<code>instance</code>对象，在执行代码 <code>instance = new Singleton()</code>时不会再被JVM进行指令重排序，会按照 <code>内存分配 -&gt; 初始化 -&gt; 引用赋值</code> 的顺序执行</p><h4 id="使用静态内部类"><a href="#使用静态内部类" class="headerlink" title="使用静态内部类"></a>使用静态内部类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonFactory</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance = <span class="keyword">new</span> Singleton();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> SingletonFactory.instance;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//序列化方法  可忽略</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">readResolve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getInstance();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样的写法利用了JVM的类加载机制，JVM在加载类的过程中确保了线程互斥，是线程安全的。外部类被加载时，不会立即加载内部类，从而<code>instance</code>不会立即被实例化。当<code>getInstance()</code> 第一次被调用时，内部类第一次被引用，从而加载了内部类，并完成了<code>instance</code>的实例化，而JVM的类加载机制确保了实例化instance的过程中的线程安全性。</p><p>缺点：使用静态内部类的方式，则存在传参的问题，外部无法传递参数给内部类</p><h4 id="使用枚举"><a href="#使用枚举" class="headerlink" title="使用枚举"></a>使用枚举</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line">    INSTANCE;</span><br><span class="line">    ...  <span class="comment">//其他方法代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>枚举类型的实例创建出来天然就是单例的，并且是线程安全的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;浅谈单例模式&quot;&gt;&lt;a href=&quot;#浅谈单例模式&quot; class=&quot;headerlink&quot; title=&quot;浅谈单例模式&quot;&gt;&lt;/a&gt;浅谈单例模式&lt;/h2&gt;&lt;h4 id=&quot;饿汉模式&quot;&gt;&lt;a href=&quot;#饿汉模式&quot; class=&quot;headerlink&quot; title=&quot;饿</summary>
      
    
    
    
    <category term="设计模式" scheme="https://zzk31.320.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="Java" scheme="https://zzk31.320.io/tags/Java/"/>
    
    <category term="设计模式" scheme="https://zzk31.320.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>hexo使用pure主题</title>
    <link href="https://zzk31.320.io/hexo/hexo%E4%BD%BF%E7%94%A8pure%E4%B8%BB%E9%A2%98/"/>
    <id>https://zzk31.320.io/hexo/hexo%E4%BD%BF%E7%94%A8pure%E4%B8%BB%E9%A2%98/</id>
    <published>2020-11-29T15:47:37.000Z</published>
    <updated>2021-03-05T10:43:09.598Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h3><p>关于hexo的介绍在上一篇文章 <a href="https://zzk31.320.io/2020/11/29/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA-NexT%E4%B8%BB%E9%A2%98/">hexo博客搭建-NexT主题</a> 中已经简单介绍过了，此处不再赘述。这篇博客主要讲的是如何使用pure主题。</p><h3 id="1-关于pure主题"><a href="#1-关于pure主题" class="headerlink" title="1 关于pure主题"></a>1 关于pure主题</h3><p>这是pure主题的github主页<a href="https://github.com/cofess/hexo-theme-pure">hexo-theme-pure</a>，详细介绍了pure的使用，pure同时也提供了中文文档<a href="https://github.com/cofess/hexo-theme-pure/blob/master/README.cn.md">hexo-theme-pure中文文档</a></p><blockquote><p>Hexo theme pure. It’s a pure theme for Hexo.   —pure主页</p></blockquote><p>这是pure主题的作者主页 <a href="https://blog.cofess.com/">Cofess - Web Developer &amp; Designer</a></p><hr><h3 id="2-安装pure"><a href="#2-安装pure" class="headerlink" title="2 安装pure"></a>2 安装pure</h3><h4 id="2-1-下载pure"><a href="#2-1-下载pure" class="headerlink" title="2.1 下载pure"></a>2.1 下载pure</h4><p>在博客<strong>根目录</strong>下使用如下命令：</p><p><code>git clone https://github.com/cofess/hexo-theme-pure.git themes/pure</code></p><h4 id="2-2-修改站点配置文件"><a href="#2-2-修改站点配置文件" class="headerlink" title="2.2 修改站点配置文件"></a>2.2 修改站点配置文件</h4><p>打开站点配置文件_config.yml，修改<code>theme:landscape</code> 为 <code>theme:pure</code></p><p>到这里就可以通过命令 <code>hexo s</code>启动hexo查看效果了。</p><hr><h3 id="3-修改pure的设置"><a href="#3-修改pure的设置" class="headerlink" title="3 修改pure的设置"></a>3 修改pure的设置</h3><h4 id="3-1-修改pure设置之前先安装几个插件"><a href="#3-1-修改pure设置之前先安装几个插件" class="headerlink" title="3.1 修改pure设置之前先安装几个插件"></a>3.1 修改pure设置之前先安装几个插件</h4><p>hexo-wordcount</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>hexo-generator-json-content </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-json-content --save</span><br></pre></td></tr></table></figure><p>hexo-generator-feed</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>hexo-generator-sitemap</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p>hexo-generator-baidu-sitemap</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><h4 id="3-2-启用文章浏览量统计，文章字数统计和阅读时长"><a href="#3-2-启用文章浏览量统计，文章字数统计和阅读时长" class="headerlink" title="3.2 启用文章浏览量统计，文章字数统计和阅读时长"></a>3.2 启用文章浏览量统计，文章字数统计和阅读时长</h4><p>启用不蒜子来统计文章浏览量，在主题配置文件中把busuanzi设置为true</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pv:</span><br><span class="line">  busuanzi:</span><br><span class="line">    enable: true  # 不蒜子统计</span><br></pre></td></tr></table></figure><p>启用文章字数统计和阅读时长（wordcount插件），主题配置文件中设置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">postCount:</span><br><span class="line">  enable: true</span><br><span class="line">  wordcount: true  # 文章字数统计</span><br><span class="line">  min2read: true  # 阅读时长预计 </span><br></pre></td></tr></table></figure><p>最终效果如下：</p><p><img src="https://i.loli.net/2020/11/30/s3rc6WAZ5LJaUj4.png" alt="image-20201130113029898.png"></p><h4 id="3-3-启用文章评论-valine"><a href="#3-3-启用文章评论-valine" class="headerlink" title="3.3 启用文章评论 - valine"></a>3.3 启用文章评论 - valine</h4><p>在主题配置文件中设置如下，我启用的是valine评论系统，valine评论系统是通过LeanCloud平台来完成数据记录的。</p><p>主要修改<code>comment.type</code>  ,<code>comment.valine.appid</code> 和 <code>comment.valine.appkey</code> ,具体设置如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">comment:</span><br><span class="line">  type: valine  # 启用哪种评论系统</span><br><span class="line">  ... </span><br><span class="line">  valine: # Valine. https:&#x2F;&#x2F;valine.js.org</span><br><span class="line">    appid: &lt;你的leancloud appid&gt; # your leancloud application appid</span><br><span class="line">    appkey: &lt;你的leancloud appkey&gt;# your leancloud application appkey</span><br><span class="line">    notify: false # mail notifier , https:&#x2F;&#x2F;github.com&#x2F;xCss&#x2F;Valine&#x2F;wiki</span><br><span class="line">    verify: false # Verification code</span><br></pre></td></tr></table></figure><p>其中的appid和appkey需要通过LeanCloud平台获取，具体文章网上有许多教程，就不再赘述，主要就是在leancloud中创建一个类，命名为Comments拿到appid和appkey就可以。</p><p>效果如下：</p><p><img src="https://i.loli.net/2020/11/30/S327EdYB6igWmnp.png" alt="image-20201130113618950.png"></p><h4 id="3-4-配置个人信息"><a href="#3-4-配置个人信息" class="headerlink" title="3.4 配置个人信息"></a>3.4 配置个人信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">profile:</span><br><span class="line">  enabled: true # Whether to show profile bar</span><br><span class="line">  avatar: images&#x2F;avatar.jpg</span><br><span class="line">  gravatar: # Gravatar email address, if you enable Gravatar, your avatar config will be overriden</span><br><span class="line">  author: zzk31</span><br><span class="line">  author_title: 热爱生活，追求技术</span><br><span class="line">  author_description: 热爱生活，追求技术。</span><br><span class="line">  location: Guangzhou, China</span><br><span class="line">  follow: https:&#x2F;&#x2F;github.com&#x2F;shzyjbr</span><br><span class="line">  # Social Links</span><br><span class="line">  social:</span><br><span class="line">    links:</span><br><span class="line">      github: https:&#x2F;&#x2F;github.com&#x2F;shzyjbr</span><br><span class="line">    link_tooltip: true # enable the social link tooltip, options: true, false</span><br></pre></td></tr></table></figure><p>头像的存放路径是在<code>yourBlogRootPath\themes\pure\source\images</code>文件夹下</p><hr><h3 id="4-pure主题下的分类，标签设置"><a href="#4-pure主题下的分类，标签设置" class="headerlink" title="4 pure主题下的分类，标签设置"></a>4 pure主题下的分类，标签设置</h3><p><strong>此处是我的踩坑指南</strong></p><p>使用<code>hexo new page tags</code> 会生成tag/index.md 按照hexo官方的设置如下，tags首页是不会显示tags的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2020-11-29 17:18:06</span><br><span class="line">type: tags</span><br></pre></td></tr></table></figure><p>需要设置如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2020-11-29 17:18:06</span><br><span class="line">layout: tags</span><br></pre></td></tr></table></figure><p>之后其他文章就跟hexo给文章标记tag一样，例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: 考研四个月备考广州大学计算机专硕初试回顾</span><br><span class="line">date: 2020-11-29 15:55:49</span><br><span class="line">tags: [考研]</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://i.loli.net/2020/11/30/kmFtiJNrxUpBHhd.png" alt="image-20201130121220550.png"></p><p>标签的设置同理，改成categories即可</p><hr><h3 id="5-404页面的设置"><a href="#5-404页面的设置" class="headerlink" title="5 404页面的设置"></a>5 404页面的设置</h3><p>使用<code>hexo new page 404</code> 会生成404/index.md， 在index.md里编写你的404页面即可。</p><blockquote><p>提示：编写的404页面只有在部署到github pages之后才会生效，在本地localhost测试不起作用</p></blockquote><h3 id="6-结束"><a href="#6-结束" class="headerlink" title="6 结束"></a>6 结束</h3><p>这篇文章的内容就到这里结束了，感谢阅读。有错误或者建议的，欢迎评论指正，或者发邮件给我。<a href="https://zzk31.320.io/about/">关于我 | zzk31的博客小站 (zzk31.320.io)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概要&quot;&gt;&lt;a href=&quot;#概要&quot; class=&quot;headerlink&quot; title=&quot;概要&quot;&gt;&lt;/a&gt;概要&lt;/h3&gt;&lt;p&gt;关于hexo的介绍在上一篇文章 &lt;a href=&quot;https://zzk31.320.io/2020/11/29/hexo%E5%8D%9A</summary>
      
    
    
    
    <category term="博客搭建" scheme="https://zzk31.320.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="hexo" scheme="https://zzk31.320.io/tags/hexo/"/>
    
    <category term="pure" scheme="https://zzk31.320.io/tags/pure/"/>
    
  </entry>
  
  <entry>
    <title>考研四个月备考广州大学计算机专硕初试回顾</title>
    <link href="https://zzk31.320.io/students/%E8%80%83%E7%A0%94%E5%9B%9B%E4%B8%AA%E6%9C%88%E5%A4%87%E8%80%83%E5%B9%BF%E5%B7%9E%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%93%E7%A1%95%E5%88%9D%E8%AF%95%E5%9B%9E%E9%A1%BE/"/>
    <id>https://zzk31.320.io/students/%E8%80%83%E7%A0%94%E5%9B%9B%E4%B8%AA%E6%9C%88%E5%A4%87%E8%80%83%E5%B9%BF%E5%B7%9E%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%93%E7%A1%95%E5%88%9D%E8%AF%95%E5%9B%9E%E9%A1%BE/</id>
    <published>2020-11-29T07:55:49.000Z</published>
    <updated>2021-03-05T10:43:26.831Z</updated>
    
    <content type="html"><![CDATA[<p>这是我在知乎的原文链接：<a href="https://zhuanlan.zhihu.com/p/146262388">考研四个月备考广州大学计算机专硕初试回顾 - 知乎 (zhihu.com)</a></p><h2 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h2><p>2019年8月16号我正式开始考研。备考时间大约4个月。</p><p><strong>数学二66+英语二79+政治73+专业课102 = 总分320</strong></p><h2 id="考研背景"><a href="#考研背景" class="headerlink" title="考研背景"></a>考研背景</h2><p>2019年我从软件工程专业毕业，19年的三月到六月我一直都在校招的公司实习以及做毕设。当时我的毕业证和学位证因为一些奇怪的原因（我已经做了我能做的一切）延迟发放了一个月，直接导致了校招公司没跟我签署劳动合同。中间经历了找工作，第二份工作不适，最终决心参加考研。</p><h2 id="正式备考"><a href="#正式备考" class="headerlink" title="正式备考"></a>正式备考</h2><p>8月15号我决心考研，16号从深圳回到家里开始备考。大概18号到20号我的考研资料陆续到货，我的20年考研之路就算正式开始了。</p><p>我报考的是广州大学计算机技术专硕（现在并入了电子信息），考的科目是政治、 英语二、 数学二、 数据结构。</p><p>四个月的时间实在很紧迫，所以我在刚开始的一个月都还会一直上知乎，看各种五个月六个月备考的经验贴（四个月的好像很少-*-），参考他们如何安排复习计划，使用哪些考研资料，跟的哪些老师（比如数学跟张宇还是汤家凤 - -，在哪些阶段要使用哪些资料跟哪位老师。这方面各位可以去知乎找到更好的分析答案，我只说一下我的选择。</p><h2 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h2><p>我高数跟的张宇，现代跟的永乐大帝。我看的张宇的基础班视频和强化班视频，复习全书用的张宇的高数十八讲。看张宇视频的时候觉得很爽，看了就觉得会做 - -（千万别学我，我数学最后才66分）。数学对我来说真的太难了，考研四个月，数学就占了极大比例，但是时间还是不够，所以说四个月备考真的很难，如果可以，建议尽早开始准备，我是别无选择才如此。顺便一提，我数学差绝对怪不到张宇头上，是我自己浮沙筑高台，急于求成，而忽略了最基础的数学功底。如果再来一次的话，不管选汤家凤还是张宇，首要的是打好基础。线性代数跟的李永乐，没什么好说的，永乐大帝牛逼。无论是永乐大帝的视频还是他的资料，都很好（至少对我来说）。</p><p>对于数学来说我个人认为我的复习不到位，所以不具有太大的参考性，但是我还是把我如何复习数学的过程讲一下，也许可以做个反面教材。。。</p><p>8月16号开始看张宇的基础班视频结合高数十八讲。题外话: 考研过程中我会将自己的一些总结、规划、感悟什么的用备忘录记下来，虽然不知道为什么想记下来，但是就是想记下来- -。</p><p><img src="https://pic1.zhimg.com/80/v2-cd00d10612188c2b05a01cb584f5c9a0_720w.jpg" alt="img"></p><p>大概看到八月底，我看完了基础班视频（这时候我认为自己打好了基础，其实。。。），中间因为急于求成，我放弃了边刷基础班视频边看十八讲（正确策略✔），选择赶进度直接刷基础班视频不总结不看十八讲（错误策略✘）。现在想来，当时应该先看十八讲，至少应该先简单看一遍，再结合基础班视频去学习，可能会更好。</p><p><img src="https://pic1.zhimg.com/80/v2-c8a3a8ef9a6061e7eee6e48a270e09f0_720w.jpg" alt="img"></p><p>然后9月初开始看线性代数的基础班视频，后来由于高数十八讲更吸引我，我中间停止了线性代数的学习，可以看到这一阶段我主要把精力放在数学上，以及英语背单词。单词真的强烈建议早背诵，并且要坚持。</p><p><img src="https://pic4.zhimg.com/80/v2-a291ca4cea3d735b3792b0edd420411b_720w.jpg" alt="img"></p><p>9月18号之后我才又重新捡起线性代数学习。</p><p><img src="https://pic3.zhimg.com/80/v2-b553695061ff053685a613a923f55982_720w.jpg" alt="img"></p><p>流水账就不多说了（有些忘记了），后面就是学习完了基础班视频，就做的十八讲上的题，还有李永乐老师的线性代数资料的题（我已经连那本教材叫什么都忘记了 - -）。四个月下来，我数学可以说几乎没刷题，什么闭关修炼什么1800接力题典我都没时间去做，我能做的，就是去把往年的真题做完，等我做完的时候，已经12月份了。。。12月份做了李林的四套卷和六套卷，我的时间真的挤不出来了（我真的一滴都没有了.jpg）</p><p>题外话：看视频PC端的话我推荐用爱奇艺万能播放器，可以倍速播放。下视频的话一般都是通过百度云下载。舍得花钱的话我建议开个百度云超级会员，下载视频满速，节省时间。后期我买了个平板，结合百度云会员，直接在平板上点播，超爽。</p><h2 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h2><p>英语我背单词用的是乐词app，背单词我没坚持到最后，中间断了一个月，11月底到12月，我又买了红宝书看，看不到一个星期也没坚持下去。。。。但是背单词真的效果显著，对于阅读提升很大，可能你去看唐迟的阅读讲解视频，会有帮助的，但是那是一些解题技巧方面，而如果你单词不背，连题目都没看懂，那也行不通。</p><p>阅读方面，我只做了真题。但是每一套真题我都刷的很认真，具体怎么刷，在知乎上有很多热心学姐有分享的帖子，大家去那看吧（我热心但是文笔有限实在写不出来）。我分享的是，不要觉得背了一大部分单词才去做真题，两者不矛盾，可以结合进行，做题的时候发现单词不会就去背，并且做题遇到的生词由于有上下文语境，你可以猜，猜不出来再去查，这样记忆深刻。关于做题方法，每个人都不同，我是看题干，再阅读，唐迟有关于这方面的讲解，兄弟姐妹们可以去看看，我不记得是什么视频了。</p><p>关于作文，我买了模板，算是被收了智商税吧，挺贵的呜呜呜。买的模板我最后不敢用，因为太多人买了，某不得学长的模板，后面卖了太多份，闲鱼上也很多。太多人用了，而且到了后面我自己已经有了一些对作文模板的判断，我认为这份模板不太行，还不如用我自己总结的，所以没用。我自己的模板是在B站看一个考研英语审卷老师的视频，不知道现在还有没有，叫胡小平，然后看他的视频，我总结一套，之后对着真题作文，撸了十套，觉得还不错，就用它了。</p><h2 id="政治"><a href="#政治" class="headerlink" title="政治"></a>政治</h2><p>肖秀荣三件套我只用上了精讲精炼（其他两件套我甚至都忘了什么名了），买的涛涛的小黄书，还不错，但我没怎么背，时间实在不够。看视频，马哲跟着涛涛看，后面的不看视频，做1000题和精讲精练。B站有个不错的漂亮学姐（其实跟我同届），叫空卡。兄弟姐妹们有兴趣可以去看看，会分享一些政治的不错的学习方法和背诵方法，我看她视频长大的。</p><h2 id="专业课"><a href="#专业课" class="headerlink" title="专业课"></a>专业课</h2><p>专业课是数据结构，我看的是天勤的资料。视频没看，花在专业课的时间最少了，比政治还少吧。有个人特殊情况在，不建议学习。只看了一本天勤的资料，做了里面的题，看了往年的真题和答案，就没了。</p><h2 id="关于心态"><a href="#关于心态" class="headerlink" title="关于心态"></a>关于心态</h2><p>每个人都有每个人的情况，我也是，上述的考研背景也说了我为什么考研。轻描淡写几句话，但是当时的心境谁又能懂。但是希望兄弟姐妹萌都有自己调节心态的方法，我自我安慰习惯了，看着天花板发呆，看着花花草草发呆，大冷天出去吹冷风散心，晚上出去跑步，偶尔看一部电影，找朋友瞎扯，但是既然决心考研，就不要放弃咯。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这是我在知乎的原文链接：&lt;a href=&quot;https://zhuanlan.zhihu.com/p/146262388&quot;&gt;考研四个月备考广州大学计算机专硕初试回顾 - 知乎 (zhihu.com)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;原文&quot;&gt;&lt;a href=&quot;#原文&quot; clas</summary>
      
    
    
    
    
    <category term="考研" scheme="https://zzk31.320.io/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客搭建-NexT主题</title>
    <link href="https://zzk31.320.io/hexo/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA-NexT%E4%B8%BB%E9%A2%98/"/>
    <id>https://zzk31.320.io/hexo/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA-NexT%E4%B8%BB%E9%A2%98/</id>
    <published>2020-11-29T04:51:35.000Z</published>
    <updated>2021-03-05T10:42:59.552Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-hexo简介"><a href="#1-hexo简介" class="headerlink" title="1 hexo简介"></a>1 hexo简介</h3><blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，生成静态网页。   —<a href="https://hexo.io/zh-cn/">Hexo</a>官网</p></blockquote><h3 id="2-hexo安装"><a href="#2-hexo安装" class="headerlink" title="2 hexo安装"></a>2 hexo安装</h3><p>安装hexo需要先安装node.js和Git</p><h4 id="2-1-安装node-js"><a href="#2-1-安装node-js" class="headerlink" title="2.1 安装node.js"></a>2.1 安装node.js</h4><blockquote><p>Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本</p></blockquote><p>通过node.js官网下载安装版进行安装，选择14.15.1长期支持版 官网：<a href="https://nodejs.org/zh-cn/">Node.js</a></p><p><img src="https://i.loli.net/2020/11/27/Eym3zR8bX1FpcxT.png" alt="image-20201127135412872.png"></p><p>安装过程与普通软件安装没有差别，一路next。</p><h4 id="2-2-安装Git"><a href="#2-2-安装Git" class="headerlink" title="2.2 安装Git"></a>2.2 安装Git</h4><p>通过Git官网下载Git安装版进行安装，安装版本2.29.2 官网：<a href="https://git-scm.com/">Git (git-scm.com)</a></p><p><img src="https://i.loli.net/2020/11/27/Dew6M4naP5Aucby.png" alt="git.png"></p><h4 id="2-3-正式安装hexo"><a href="#2-3-正式安装hexo" class="headerlink" title="2.3 正式安装hexo"></a>2.3 正式安装hexo</h4><p>安装好node.js和Git之后就可以开始进行hexo的安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装成功之后可以在cmd命令行中输入hexo，查看是否安装成功</p><p><img src="https://i.loli.net/2020/11/27/P4Mktm3IlERVxoC.png" alt="image-20201127140007483"></p><p>出现如下提示则表示安装成功。</p><h3 id="3-使用hexo搭建博客"><a href="#3-使用hexo搭建博客" class="headerlink" title="3 使用hexo搭建博客"></a>3 使用hexo搭建博客</h3><h4 id="3-1-初始化"><a href="#3-1-初始化" class="headerlink" title="3.1 初始化"></a>3.1 初始化</h4><p>在Windows中创建一个文件夹，作为想要搭建的博客的根目录，比如我的就是 D:\blog\hexo</p><p><strong>在cmd中进入根目录下</strong>，使用如下命令初始化，该命令会在根目录下创建hexo所需的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>创建完成之后的目录如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><p>其中_config.yml称为站点配置文件，对应的，themes/_config.yml称为主题配置文件。<br>简单解释下两个配置文件。根目录下的_config.yml是对整个博客站点的内容进行设置。hexo的博客可以指定多种主题，主题的配置是通过themes/_config.yml进行设置的。</p><h4 id="3-2-启动hexo"><a href="#3-2-启动hexo" class="headerlink" title="3.2 启动hexo"></a>3.2 启动hexo</h4><p>使用如下命令可以启动hexo，进行快速效果预览。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>可以看到出现如下提示：</p><p><img src="https://i.loli.net/2020/11/27/qUmerCBi3Wcf6aF.png" alt="image-20201127141157314.png">)</p><p>浏览器访问localhost:4000可以看到博客搭建成功。</p><p><img src="https://i.loli.net/2020/11/27/w5hLyImDjSJio1k.png" alt="image-20201127141428928.png"></p><h3 id="4-使用NexT主题"><a href="#4-使用NexT主题" class="headerlink" title="4. 使用NexT主题"></a>4. 使用NexT主题</h3><p>hexo可以通过指定不同的主题，达到更换博客风格的目的。hexo的主题可以访问<a href="https://hexo.io/themes/">Themes | Hexo</a></p><p>本次选用Text主题。</p><h4 id="4-1-下载NexT主题"><a href="#4-1-下载NexT主题" class="headerlink" title="4.1 下载NexT主题"></a>4.1 下载NexT主题</h4><p>我们通过Git来下载。</p><p><strong>在cmd目录下进入根目录</strong>，使用如下命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure><p>下载完毕后可以看到themes目录下多了一个next文件夹</p><p><em>hexo把所有的主题都放在了themes文件夹里面，所以通常的做法就是把想要使用的主题放到在themes目录下面，之后去站点配置文件里面进行主题的设置。</em></p><h4 id="4-2-设置站点配置文件，进行主题更换"><a href="#4-2-设置站点配置文件，进行主题更换" class="headerlink" title="4.2 设置站点配置文件，进行主题更换"></a>4.2 设置站点配置文件，进行主题更换</h4><p>打开站点配置文件_config.yml,  可以使用查找功能定位到themes关键字，修改为如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><h4 id="4-3-启动博客进行验证"><a href="#4-3-启动博客进行验证" class="headerlink" title="4.3 启动博客进行验证"></a>4.3 启动博客进行验证</h4><p>输入<code>hexo server</code>启动博客，可以看到主题已经更换为NexT主题。</p><p><em>下图的NexT主题经过了其他设置，所以你的主题可能和我看起来有点不一样</em></p><p><img src="https://i.loli.net/2020/11/27/TO42oeM7bp8xQ6y.png" alt="image-20201127145135433.png"></p>]]></content>
    
    
    <summary type="html">hexo把所有的主题都放在了themes文件夹里面，所以通常的做法就是把想要使用的主题放到在themes目录下面，之后去站点配置文件里面进行主题的设置...</summary>
    
    
    
    <category term="博客搭建" scheme="https://zzk31.320.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="hexo" scheme="https://zzk31.320.io/tags/hexo/"/>
    
  </entry>
  
</feed>
