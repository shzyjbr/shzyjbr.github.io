{"meta":{"title":"Kelton的博客小站","subtitle":"问渠哪得清如许，为有源头活水来","description":"Kelton写文章的地方","author":"Kelton","url":"https://www.kelton.top","root":"/"},"pages":[{"title":"categories","date":"2020-11-29T09:18:29.000Z","updated":"2020-11-29T15:28:05.044Z","comments":true,"path":"categories/index.html","permalink":"https://www.kelton.top/categories/index.html","excerpt":"","text":""},{"title":"404","date":"2020-11-29T09:05:44.643Z","updated":"2020-11-29T09:05:44.643Z","comments":false,"path":"/404.html","permalink":"https://www.kelton.top/404.html","excerpt":"","text":"&lt;!DOCTYPE html&gt; 404 - zzk31的博客小站 body, h1, p, pre { margin: 0; } body { font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"PingFang SC\", \"Microsoft YaHei\", \"Source Han Sans SC\", \"Noto Sans CJK SC\", \"WenQuanYi Micro Hei\", sans-serif; } a { text-decoration: none; } .Button { background: none; border: none; cursor: pointer; display: inline-block; font-size: 14px; padding: 0; text-align: center; } .Button:focus { outline: none; transition: box-shadow 0.3s; } /* 暂时没有用 focus visiable */ .Button:focus { box-shadow: 0 0 0 2px #ffffff, 0 0 0 4px rgba(0, 132, 255, 0.3); } html[data-theme=\"dark\"] .Button:focus { box-shadow: 0 0 0 2px #1a1a1a, 0 0 0 4px rgba(58, 118, 208, 0.6); } .Button--primary { border: 1px solid; border-radius: 3px; line-height: 32px; padding: 0 16px; } .Button--primary.Button--blue { background-color: #0084ff; border-color: #0084ff; color: #fff; } html[data-theme=\"dark\"] .Button--primary.Button--blue { background-color: #3a76d0; border-color: #3a76d0; color: #fff; } .Button--primary.Button--blue:hover { background-color: #0077e6; border-color: #0077e6; } html[data-theme=\"dark\"] .Button--primary.Button--blue:hover { background-color: #2e69c2; border-color: #2e69c2; } .Button--plain.Button--blue { color: #0084ff; } html[data-theme=\"dark\"] .Button--plain.Button--blue { color: #3a76d0; } .Button--plain.Button--blue:hover { color: #0077e6; } html[data-theme=\"dark\"] .Button--plain.Button--blue:hover { color: #2e69c2; } body { /* cc(GBK99A) */ background: #fff; } html[data-theme=\"dark\"] body { background: #1a1a1a; } .ErrorPage-container { display: flex; justify-content: center; margin-top: 180px; } @media (max-width: 690px) { .ErrorPage-container { align-items: center; flex-direction: column-reverse; margin-top: 60px; } } .ErrorPage-title, .ErrorPage-subtitle { /* cc(GBK04A) */ color: #646464; line-height: 1.4; } html[data-theme=\"dark\"] .ErrorPage-title, html[data-theme=\"dark\"] .ErrorPage-subtitle { color: #999; } .ErrorPage-title { font-size: 40px; /* @mixin bold; */ font-synthesis: style; font-weight: 600; } html[data-ios] .ErrorPage-title { font-weight: 500; } html[data-android] .ErrorPage-title { font-weight: 700; } @media (max-width: 690px) { .ErrorPage-title { font-size: 30px; } } .ErrorPage-subtitle { font-size: 18px; margin-top: 10px; } .ErrorPage-text { align-items: flex-start; display: flex; flex-direction: column; justify-content: center; min-width: 384px; } @media (max-width: 690px) { .ErrorPage-text { align-items: center; min-width: auto; } } .ErrorPage-primaryButton { margin-top: 20px; } .ErrorPage-otherButtonContainer { align-items: center; /* cc(GBL01A) */ color: #0084ff; display: flex; font-size: 14px; margin-top: 20px; /* @mixin bold; */ font-synthesis: style; font-weight: 600; } html[data-theme=\"dark\"] .ErrorPage-otherButtonContainer { color: #3a76d0; } html[data-ios] .ErrorPage-otherButtonContainer { font-weight: 500; } html[data-android] .ErrorPage-otherButtonContainer { font-weight: 700; } .ErrorPage-otherButton { align-items: center; display: flex; margin-left: 0.5em; /* @mixin bold; */ font-synthesis: style; font-weight: 600; } html[data-ios] .ErrorPage-otherButton { font-weight: 500; } html[data-android] .ErrorPage-otherButton { font-weight: 700; } .ErrorPage-errorImageContainer { align-items: center; display: flex; height: 250px; justify-content: center; margin-left: 20px; width: 250px; } @media (max-width: 690px) { .ErrorPage-errorImageContainer { margin-left: 0; } } 404 你似乎来到了没有知识存在的荒原 返回博客首页"},{"title":"关于我","date":"2020-11-26T12:22:50.000Z","updated":"2020-11-29T08:02:56.606Z","comments":true,"path":"about/index.html","permalink":"https://www.kelton.top/about/index.html","excerpt":"","text":"努力学习，提升自己。开阔视野，保持谦虚。有问题欢迎通过邮箱417160807@qq.com来信讨论。也可以关注我的知乎:zzk 私信我都会尽量回复。"},{"title":"tags","date":"2020-11-29T09:18:06.000Z","updated":"2020-11-29T15:27:41.961Z","comments":true,"path":"tags/index.html","permalink":"https://www.kelton.top/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"for-my-love","slug":"formylove","date":"2021-04-06T01:22:47.000Z","updated":"2021-04-06T01:28:23.456Z","comments":true,"path":"Abigail/formylove/","link":"","permalink":"https://www.kelton.top/Abigail/formylove/","excerpt":"","text":"第一天9点左右的高铁，早上7点不到起床，吃早餐，坐地铁，到广州南站，检票进站，等待发车，发车好久，想按快进键。 12点到桂林北，我的宝宝已经先到一步啦，在桂林站等着接我，迫不及待地希望见到她，希望时间再快一点，快进到12点47到达桂林站（实际是12点49到站，延迟2分钟我印象深刻）。 车门一开我一路狂奔出站，在出站闸门那里卡住了那么一小会，远远地，隔着闸门我已经看到了穿着牛仔外套的小可爱，但我还不想让她看见我，心想别看过来，我要悄悄过去制造惊喜。万幸没有卡太久，偷偷跑过去，她还在看手机，等到我扑上去的时候她才看见我，被我一把搂进怀里，感觉抱住了全世界，好温暖，好幸福呀。 之后我们打车离开火车站，去了入住的酒店（其实是个民宿类型），就在东西巷附近。进了房间，浴室玻璃有点透明，她害羞了，竟然让我出去等 ？？？好吧，我出去外面等，走廊路过一个女生，有点尴尬…感觉她尿了好久哈哈哈哈，终于给我开门了。简单收拾一下就想拉着我走了，怎么可能，我才不想那么快走，还想两个人单独多待会。赖着不走，拉着她，抱着她。好吧，拖延了一会，出发去吃午餐了，其实已经都下午两点多了，因为我们打算晚饭等到10点再去吃海底捞，这样可以有学生优惠六九折：） 午饭去了胖哥俩蟹肉煲…吃鸡爪煲，因为我螃蟹过敏（告别了美味螃蟹，惨）。从酒店出门的时候，她不小心扭到脚踝了，心疼- -。（吐槽：宝宝走路时不时就会绊到）。我坐在她左手边，她跟我说别人情侣都是面对面坐的哈哈哈哈。refuse，我就喜欢坐在她身边，搂着她。吃饭的时候她让我吃慢点哈哈哈因为看见我一口就把那条圆圆滑滑的不知道叫什么的吞进嘴里。聊天的内容记不清了，只记得饮料我喝了可乐她喝的雪碧：），以及，被我摸了屁股，嘻嘻… 未完待续，先给宝宝看一眼 回来啦，继续更新 吃完鸡爪煲出来已经下午三点多了好像，想着去散散步，但是下着小雨，我觉得下着小雨漫步街头很浪漫很惬意，但是她觉得好麻烦要回去，她好不喜欢桂林的雨hhhhhh。曾经我也很讨厌，但是跟她在一起，一切都变得可爱。然后就回酒店房间啦，冲鸭！ 在房间里就是腻歪，此处省略一千字… 我们打算晚上十点再去吃海底捞，所以就先看电影。我们提前商量好了看什么电影，用她的iPad看，酒店的电视机不能投屏，建议改进。 我们看的是《真爱至上》，刚开始她看得很认真，而且她之前也看过几次了，还给我解说。巴特，我想看的可不是电影，我一直在盘算找机会亲她，憋了好久，她还时不时给我解说，我：嗯嗯，哦哦，这样吗…后来终于忍不住啦，直接亲了上去，我们亲了好久，她有点喘，没见面前有人说要把我吻断气呢，就这？就这？ 电影是没好好看了…此处省略一千字… 腻歪到10点左右去吃海底捞啦，不记得点了什么，那几天她来姨妈，那晚就肚子不太舒服，有点可惜。之前我们宿舍也是在这家海底捞，我们对面的位置，就是当时我们宿舍几个人坐的位置，还记得舍长和中阁去参加了嗑瓜子比赛，舍长还拿了奖品，还记得当时i轩和我夸赞舍长口活了得哈哈哈哈。转眼都随风消逝了，往事还历历在目，没想到有一天会回到桂林，没想到有一天会再来这家海底捞，更没想到，会是和她，也许，命中注定。 回到酒店已经很晚了，第一晚洗澡老实说我还有点害羞…后来我问她第一晚洗澡会害羞吗，她竟然说不会。我：？？？不怕我破门而入吗哈哈哈。她：我相信你。好吧，我确实也不会。她洗完澡的样子好迷人，看她穿着薄薄的上衣，第一次替心上人吹头发，闻着她的发香，听她讲姨妈巾也有日用夜用还有护垫…好满足，想永远这样下去。 上床睡觉环节省略一千字…解锁了一些接吻技巧和姿势，嘻嘻 第二天第一晚玩闹到三点才睡着，早上我早早就醒啦，某人倒是睡得真香，躺在床上观察了一会睡美人，全方位无死角，怎么看都好看哈哈哈哈。被我拉过来搂在怀里，美好得像是我没睡醒，毕竟做梦也没想过会有这么美好的一天到来（宝宝说这个举动让她觉得好暖）。过一会她好像被我弄醒了，醒了才好，赶紧起来玩。我悄悄下床去刷了牙又回来，索吻被拒，她说她还没刷牙呢，好吧，那我亲别的地方（doge 洗漱后躺在床上玩闹，点了麦乐送，等着吃午饭，接着玩闹。不记得是第二天早上还是第三天早上，还在床上亲热的时候，麦乐送配送员就来敲门啦，好叭，当时还有点慌张（正做着坏事呢），以为是什么事情，把衣服穿好拿了外卖。她好喜欢麦当劳的可乐（某人:麦当劳的可乐，yyds）,我们第一次约会的时候，她也是买了两杯麦当劳的可乐，第二次也是！搞不好麦当劳的冰阔落在她心里的地位比我还高… 甚至只想宅在房间里跟她在一起…原本打算去訾洲公园，因为我很喜欢那个地方，好想带她去那里，其实我也好几年没去过了，那条幽深细长的竹林小径永远留在我的回忆中了。我们就这么一直躺在床上玩闹，看着时间从一点到两点，两点到三点，我舍不得出去。终于下定决心准备出门的时候，她说她肚子又不舒服啦，好吧，不去没关系，只要跟她在一起做什么都好。躺在床上给她揉小肚子，聊天，kiss… 终于出来吃晚餐了。一出门发现天气好好，十指相扣，走在路上，都是幸福的感觉。去探鱼取了号，趁着排队叫号的时间，我们逛了逛东西巷，喝着奶茶，漫步在步行街上，感觉幸福都要溢出来了 想在路上跟她kiss，可某人好害羞呢。我是个想象力丰富的人，想着人山人海中，或在熙攘的街巷上，我们就这么紧紧拥抱着，感受着彼此的温度，不管周遭人来人往，全世界为我们暂停片刻又如何。巴特，她好害羞，暂时没机会实现 0.0 其实时间过得越久，越不太能记得一些细节，可是某一刻，它们又会突然从我脑海中蹦出来，告诉我，它们一直都在。 东西巷探鱼的二人桌其实是要面对面坐的，可我好喜欢跟她坐一边，可以给她夹肉吃，可以牵着她的小手。每次我们去吃饭，都要对比一下别的情侣怎么坐，她就会打趣我说你看别的情侣都是那样坐的，我：不管（傲娇 探鱼吃了好久，吃完已经入夜了（至少桂林这座城市已经入夜了 - -）。现在想起来还是觉得好美好，散步在解放桥下，沿着漓江，迎着拂面而来的江风，就这么一路慢慢走，慢慢聊。慢慢入睡的城市，昏暗的小路，以及，那个交换珍珠的吻，两颗躁动的心。 美好的夜晚，甜蜜的回忆。","categories":[{"name":"love","slug":"love","permalink":"https://www.kelton.top/categories/love/"}],"tags":[{"name":"Abigail","slug":"Abigail","permalink":"https://www.kelton.top/tags/Abigail/"}]},{"title":"关于SBX 和 Polynomial Mutation的一点知识","slug":"关于SBX-和-Polynomial-Mutation的一点知识","date":"2020-12-20T06:35:57.000Z","updated":"2021-03-05T10:43:36.365Z","comments":true,"path":"students/关于SBX-和-Polynomial-Mutation的一点知识/","link":"","permalink":"https://www.kelton.top/students/%E5%85%B3%E4%BA%8ESBX-%E5%92%8C-Polynomial-Mutation%E7%9A%84%E4%B8%80%E7%82%B9%E7%9F%A5%E8%AF%86/","excerpt":"","text":"关于SBX 和 Polynomial Mutation的一点知识1.SBX （Simulated Binary Crossover） SBX是模拟二进制编码的遗传算法中的单点交叉 Select two parents $p_1 $ and $ p_2$ Generate a uniform distribution random number $u \\in [0,1) $ Calculate $\\beta$ \\beta=\\begin{Bmatrix} (2u)^\\frac{1}{\\eta+1}, \\quad if\\quad u \\leq 0.5\\\\ (\\frac{1}{2-2u})^\\frac{1}{\\eta+1},\\quad if\\quad u > 0.5 \\end{Bmatrix} where $\\eta$ is the Spread Factor distribution index. Set $\\eta$ to 20 in MOEAs generally. Compute offspring as c_1 = \\frac{1}{2}(p_1+p_2) - \\frac{1}{2}\\beta(p_1-p_2)\\\\ c_2 = \\frac{1}{2}(p_1+p_2) + \\frac{1}{2}\\beta(p_1-p_2)Java代码实现（Author:Antonio J. Nebro , Juan J. Durillo）123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112// Author:// Antonio J. Nebro &lt;antonio@lcc.uma.es&gt;// Juan J. Durillo &lt;durillo@lcc.uma.es&gt;//// Copyright (c) 2011 Antonio J. Nebro, Juan J. Durillo//// This program is free software: you can redistribute it and/or modify// it under the terms of the GNU Lesser General Public License as published by// the Free Software Foundation, either version 3 of the License, or// (at your option) any later version.//// This program is distributed in the hope that it will be useful,// but WITHOUT ANY WARRANTY; without even the implied warranty of// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the// GNU Lesser General Public License for more details.// // You should have received a copy of the GNU Lesser General Public License// along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. public Solution[] doCrossover(double probability, Solution parent1, Solution parent2) throws JMException &#123; Solution[] offSpring = new Solution[2]; offSpring[0] = new Solution(parent1); offSpring[1] = new Solution(parent2); int i; double rand; double y1, y2, yL, yu; double c1, c2; double alpha, beta, betaq; double valueX1, valueX2; XReal x1 = new XReal(parent1); XReal x2 = new XReal(parent2); XReal offs1 = new XReal(offSpring[0]); XReal offs2 = new XReal(offSpring[1]); int numberOfVariables = x1.getNumberOfDecisionVariables(); if (PseudoRandom.randDouble() &lt;= probability) &#123; for (i = 0; i &lt; numberOfVariables; i++) &#123; valueX1 = x1.getValue(i); valueX2 = x2.getValue(i); if (PseudoRandom.randDouble() &lt;= 0.5) &#123; if (java.lang.Math.abs(valueX1 - valueX2) &gt; EPS) &#123; if (valueX1 &lt; valueX2) &#123; y1 = valueX1; y2 = valueX2; &#125; else &#123; y1 = valueX2; y2 = valueX1; &#125; // if yL = x1.getLowerBound(i); yu = x1.getUpperBound(i); rand = PseudoRandom.randDouble(); beta = 1.0 + (2.0 * (y1 - yL) / (y2 - y1)); alpha = 2.0 - java.lang.Math.pow(beta, -(distributionIndex_ + 1.0)); if (rand &lt;= (1.0 / alpha)) &#123; betaq = java.lang.Math.pow((rand * alpha), (1.0 / (distributionIndex_ + 1.0))); &#125; else &#123; betaq = java.lang.Math.pow((1.0 / (2.0 - rand * alpha)), (1.0 / (distributionIndex_ + 1.0))); &#125; // if c1 = 0.5 * ((y1 + y2) - betaq * (y2 - y1)); beta = 1.0 + (2.0 * (yu - y2) / (y2 - y1)); alpha = 2.0 - java.lang.Math.pow(beta, -(distributionIndex_ + 1.0)); if (rand &lt;= (1.0 / alpha)) &#123; betaq = java.lang.Math.pow((rand * alpha), (1.0 / (distributionIndex_ + 1.0))); &#125; else &#123; betaq = java.lang.Math.pow((1.0 / (2.0 - rand * alpha)), (1.0 / (distributionIndex_ + 1.0))); &#125; // if c2 = 0.5 * ((y1 + y2) + betaq * (y2 - y1)); if (c1 &lt; yL) c1 = yL; if (c2 &lt; yL) c2 = yL; if (c1 &gt; yu) c1 = yu; if (c2 &gt; yu) c2 = yu; if (PseudoRandom.randDouble() &lt;= 0.5) &#123; offs1.setValue(i, c2); offs2.setValue(i, c1); &#125; else &#123; offs1.setValue(i, c1); offs2.setValue(i, c2); &#125; // if &#125; else &#123; offs1.setValue(i, valueX1); offs2.setValue(i, valueX2); &#125; // if &#125; else &#123; offs1.setValue(i, valueX2); offs2.setValue(i, valueX1); &#125; // if &#125; // if &#125; // if return offSpring; &#125; // doCrossover Polynomial Mutation多项式变异公式： x(t+1)=x(t) + \\delta(y_u-y_l) \\delta_j = \\begin{Bmatrix} [2u+(1-2u)(1-\\delta_1)^{\\eta+1}]^\\frac{1}{\\eta+1}, \\qquad \\qquad \\quad if\\quad u \\leq 0.5\\\\ 1-[2(1-u)+2(u-0.5)(1-\\delta_2)^{\\eta+1}]^{\\frac{1}{\\eta+1}}, if \\quad u > 0.5 \\\\ \\end{Bmatrix}其中，$u$是一个随机数，$u\\in[0,1)$ , $\\eta$ 是分布指数, $\\delta_1$, $\\delta_2$ 定义如下 \\delta_1=\\frac{y - y_l}{y_u-y_l} \\delta_2=\\frac{y_u - y}{y_u-y_l}$y$是一个变异前的一个基因（二进制编码）或者说子变量（真实编码），$y_l$ 是该基因或子变量对应的下界，$y_u$ 是该基因或子变量对应的上界 Java代码实现（Author:Antonio J. Nebro, Juan J. Durillo）12345678910111213141516171819202122232425262728293031public void doMutation(double probability, Solution solution) throws JMException &#123; double rnd, delta1, delta2, mut_pow, deltaq; double y, yl, yu, val, xy; XReal x = new XReal(solution); for (int var = 0; var &lt; solution.numberOfVariables(); var++) &#123; if (PseudoRandom.randDouble() &lt;= probability) &#123; y = x.getValue(var); yl = x.getLowerBound(var); yu = x.getUpperBound(var); delta1 = (y - yl) / (yu - yl); delta2 = (yu - y) / (yu - yl); rnd = PseudoRandom.randDouble(); mut_pow = 1.0 / (eta_m_ + 1.0); if (rnd &lt;= 0.5) &#123; xy = 1.0 - delta1; val = 2.0 * rnd + (1.0 - 2.0 * rnd) * (Math.pow(xy, (distributionIndex_ + 1.0))); deltaq = java.lang.Math.pow(val, mut_pow) - 1.0; &#125; else &#123; xy = 1.0 - delta2; val = 2.0 * (1.0 - rnd) + 2.0 * (rnd - 0.5) * (java.lang.Math.pow(xy, (distributionIndex_ + 1.0))); deltaq = 1.0 - (java.lang.Math.pow(val, mut_pow)); &#125; y = y + deltaq * (yu - yl); if (y &lt; yl) y = yl; if (y &gt; yu) y = yu; x.setValue(var, y); &#125; &#125; // for&#125; // doMutation","categories":[],"tags":[{"name":"多目标进化优化","slug":"多目标进化优化","permalink":"https://www.kelton.top/tags/%E5%A4%9A%E7%9B%AE%E6%A0%87%E8%BF%9B%E5%8C%96%E4%BC%98%E5%8C%96/"}]},{"title":"浅谈单例模式","slug":"浅谈单例模式","date":"2020-12-20T06:32:07.000Z","updated":"2021-03-05T10:43:19.149Z","comments":true,"path":"pattern/浅谈单例模式/","link":"","permalink":"https://www.kelton.top/pattern/%E6%B5%85%E8%B0%88%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/","excerpt":"","text":"浅谈单例模式饿汉模式1234567public class Singleton &#123; private static Singleton instance = new Singleton(); private Singleton() &#123;&#125; public static Singleton newInstance() &#123; return instance; &#125;&#125; 缺点：在需要初始化许多对象的时候会导致系统启动较慢，比如在有许多个单例对象的容器中，启动该容器的初始过程会比较长。 懒加载模式123456789101112public class Singleton &#123; private static Singleton instance = null; private Singleton()&#123;&#125; public static synchronized Singleton getInstance() &#123; if(instance == null) &#123; instance = new Singleton(); &#125; return instance; &#125;&#125; 缺点：同步方法锁住了对象，降低了系统的处理速度。 错误的双重锁检查1234567891011121314public class Singleton &#123; private static Singleton instance = null; private Singleton()&#123;&#125; public static Singleton getInstance() &#123; if(instance == null) &#123; synchronized(Singleton.class) &#123; if(instance == null) &#123; instance = new Singleton(); &#125; &#125; &#125; return instance; &#125;&#125; 这样的写法是有问题的。在JVM中， instance = new Singleton(); 语句并不是一个原子操作，分为创建对象和引用赋值两步。其中，创建对象需要为对象分配空间，再进行初始化。以上三步，分配内存永远是第一步，但是后面两步则可能被重排序。 JVM并不保证初始化先于引用赋值的顺序，因此很可能是先创建了对象，即在Singleton实例分配了内存空间，但是还未进行初始化，然后赋值给了instance，这是实例虽然分配到了空间，但是其并未完成初始化，而instance引用却不为空，这时另一个线程抢占执行，执行了getInstance（）方法，便会发现instance不为null，从而直接返回了instance，导致系统出错。 正确的双重锁检查1234567891011121314public class Singleton &#123; private static volatile Singleton instance = null; private Singleton()&#123;&#125; public static Singleton getInstance() &#123; if(instance == null) &#123; synchronized(Singleton.class) &#123; if(instance == null) &#123; instance = new Singleton(); &#125; &#125; &#125; return instance; &#125;&#125; 利用volatile的内存可见性可以使得instance不会被线程缓存，所有的线程读写该对象都需要对主内存进行操作。 volatile还可以防止指令重排序，从而使得上述的双重锁检查代码正确执行。这里的防止指令重排序是指，volatile修饰的instance对象，在执行代码 instance = new Singleton()时不会再被JVM进行指令重排序，会按照 内存分配 -&gt; 初始化 -&gt; 引用赋值 的顺序执行 使用静态内部类12345678910111213public class Singleton &#123; private Singleton() &#123;&#125; private static class SingletonFactory &#123; private static Singleton instance = new Singleton(); &#125; public static Singleton getInstance() &#123; return SingletonFactory.instance; &#125; //序列化方法 可忽略 public Object readResolve() &#123; return getInstance(); &#125;&#125; 这样的写法利用了JVM的类加载机制，JVM在加载类的过程中确保了线程互斥，是线程安全的。外部类被加载时，不会立即加载内部类，从而instance不会立即被实例化。当getInstance() 第一次被调用时，内部类第一次被引用，从而加载了内部类，并完成了instance的实例化，而JVM的类加载机制确保了实例化instance的过程中的线程安全性。 缺点：使用静态内部类的方式，则存在传参的问题，外部无法传递参数给内部类 使用枚举1234public enum Singleton &#123; INSTANCE; ... //其他方法代码&#125; 枚举类型的实例创建出来天然就是单例的，并且是线程安全的。","categories":[{"name":"设计模式","slug":"设计模式","permalink":"https://www.kelton.top/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://www.kelton.top/tags/Java/"},{"name":"设计模式","slug":"设计模式","permalink":"https://www.kelton.top/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"hexo使用pure主题","slug":"hexo使用pure主题","date":"2020-11-29T15:47:37.000Z","updated":"2021-03-05T10:43:09.598Z","comments":true,"path":"hexo/hexo使用pure主题/","link":"","permalink":"https://www.kelton.top/hexo/hexo%E4%BD%BF%E7%94%A8pure%E4%B8%BB%E9%A2%98/","excerpt":"","text":"概要关于hexo的介绍在上一篇文章 hexo博客搭建-NexT主题 中已经简单介绍过了，此处不再赘述。这篇博客主要讲的是如何使用pure主题。 1 关于pure主题这是pure主题的github主页hexo-theme-pure，详细介绍了pure的使用，pure同时也提供了中文文档hexo-theme-pure中文文档 Hexo theme pure. It’s a pure theme for Hexo. —pure主页 这是pure主题的作者主页 Cofess - Web Developer &amp; Designer 2 安装pure2.1 下载pure在博客根目录下使用如下命令： git clone https://github.com/cofess/hexo-theme-pure.git themes/pure 2.2 修改站点配置文件打开站点配置文件_config.yml，修改theme:landscape 为 theme:pure 到这里就可以通过命令 hexo s启动hexo查看效果了。 3 修改pure的设置3.1 修改pure设置之前先安装几个插件hexo-wordcount 1npm install hexo-wordcount --save hexo-generator-json-content 1npm install hexo-generator-json-content --save hexo-generator-feed 1npm install hexo-generator-feed --save hexo-generator-sitemap 1npm install hexo-generator-sitemap --save hexo-generator-baidu-sitemap 1npm install hexo-generator-baidu-sitemap --save 3.2 启用文章浏览量统计，文章字数统计和阅读时长启用不蒜子来统计文章浏览量，在主题配置文件中把busuanzi设置为true 123pv: busuanzi: enable: true # 不蒜子统计 启用文章字数统计和阅读时长（wordcount插件），主题配置文件中设置如下： 1234postCount: enable: true wordcount: true # 文章字数统计 min2read: true # 阅读时长预计 最终效果如下： 3.3 启用文章评论 - valine在主题配置文件中设置如下，我启用的是valine评论系统，valine评论系统是通过LeanCloud平台来完成数据记录的。 主要修改comment.type ,comment.valine.appid 和 comment.valine.appkey ,具体设置如下 12345678comment: type: valine # 启用哪种评论系统 ... valine: # Valine. https:&#x2F;&#x2F;valine.js.org appid: &lt;你的leancloud appid&gt; # your leancloud application appid appkey: &lt;你的leancloud appkey&gt;# your leancloud application appkey notify: false # mail notifier , https:&#x2F;&#x2F;github.com&#x2F;xCss&#x2F;Valine&#x2F;wiki verify: false # Verification code 其中的appid和appkey需要通过LeanCloud平台获取，具体文章网上有许多教程，就不再赘述，主要就是在leancloud中创建一个类，命名为Comments拿到appid和appkey就可以。 效果如下： 3.4 配置个人信息1234567891011121314profile: enabled: true # Whether to show profile bar avatar: images&#x2F;avatar.jpg gravatar: # Gravatar email address, if you enable Gravatar, your avatar config will be overriden author: zzk31 author_title: 热爱生活，追求技术 author_description: 热爱生活，追求技术。 location: Guangzhou, China follow: https:&#x2F;&#x2F;github.com&#x2F;shzyjbr # Social Links social: links: github: https:&#x2F;&#x2F;github.com&#x2F;shzyjbr link_tooltip: true # enable the social link tooltip, options: true, false 头像的存放路径是在yourBlogRootPath\\themes\\pure\\source\\images文件夹下 4 pure主题下的分类，标签设置此处是我的踩坑指南 使用hexo new page tags 会生成tag/index.md 按照hexo官方的设置如下，tags首页是不会显示tags的 123title: tagsdate: 2020-11-29 17:18:06type: tags 需要设置如下 123title: tagsdate: 2020-11-29 17:18:06layout: tags 之后其他文章就跟hexo给文章标记tag一样，例如 123title: 考研四个月备考广州大学计算机专硕初试回顾date: 2020-11-29 15:55:49tags: [考研] 效果如下： 标签的设置同理，改成categories即可 5 404页面的设置使用hexo new page 404 会生成404/index.md， 在index.md里编写你的404页面即可。 提示：编写的404页面只有在部署到github pages之后才会生效，在本地localhost测试不起作用 6 结束这篇文章的内容就到这里结束了，感谢阅读。有错误或者建议的，欢迎评论指正，或者发邮件给我。关于我 | zzk31的博客小站 (zzk31.320.io)","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://www.kelton.top/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.kelton.top/tags/hexo/"},{"name":"pure","slug":"pure","permalink":"https://www.kelton.top/tags/pure/"}]},{"title":"考研四个月备考广州大学计算机专硕初试回顾","slug":"考研四个月备考广州大学计算机专硕初试回顾","date":"2020-11-29T07:55:49.000Z","updated":"2021-03-05T10:43:26.831Z","comments":true,"path":"students/考研四个月备考广州大学计算机专硕初试回顾/","link":"","permalink":"https://www.kelton.top/students/%E8%80%83%E7%A0%94%E5%9B%9B%E4%B8%AA%E6%9C%88%E5%A4%87%E8%80%83%E5%B9%BF%E5%B7%9E%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%93%E7%A1%95%E5%88%9D%E8%AF%95%E5%9B%9E%E9%A1%BE/","excerpt":"","text":"这是我在知乎的原文链接：考研四个月备考广州大学计算机专硕初试回顾 - 知乎 (zhihu.com) 原文2019年8月16号我正式开始考研。备考时间大约4个月。 数学二66+英语二79+政治73+专业课102 = 总分320 考研背景2019年我从软件工程专业毕业，19年的三月到六月我一直都在校招的公司实习以及做毕设。当时我的毕业证和学位证因为一些奇怪的原因（我已经做了我能做的一切）延迟发放了一个月，直接导致了校招公司没跟我签署劳动合同。中间经历了找工作，第二份工作不适，最终决心参加考研。 正式备考8月15号我决心考研，16号从深圳回到家里开始备考。大概18号到20号我的考研资料陆续到货，我的20年考研之路就算正式开始了。 我报考的是广州大学计算机技术专硕（现在并入了电子信息），考的科目是政治、 英语二、 数学二、 数据结构。 四个月的时间实在很紧迫，所以我在刚开始的一个月都还会一直上知乎，看各种五个月六个月备考的经验贴（四个月的好像很少-*-），参考他们如何安排复习计划，使用哪些考研资料，跟的哪些老师（比如数学跟张宇还是汤家凤 - -，在哪些阶段要使用哪些资料跟哪位老师。这方面各位可以去知乎找到更好的分析答案，我只说一下我的选择。 数学我高数跟的张宇，现代跟的永乐大帝。我看的张宇的基础班视频和强化班视频，复习全书用的张宇的高数十八讲。看张宇视频的时候觉得很爽，看了就觉得会做 - -（千万别学我，我数学最后才66分）。数学对我来说真的太难了，考研四个月，数学就占了极大比例，但是时间还是不够，所以说四个月备考真的很难，如果可以，建议尽早开始准备，我是别无选择才如此。顺便一提，我数学差绝对怪不到张宇头上，是我自己浮沙筑高台，急于求成，而忽略了最基础的数学功底。如果再来一次的话，不管选汤家凤还是张宇，首要的是打好基础。线性代数跟的李永乐，没什么好说的，永乐大帝牛逼。无论是永乐大帝的视频还是他的资料，都很好（至少对我来说）。 对于数学来说我个人认为我的复习不到位，所以不具有太大的参考性，但是我还是把我如何复习数学的过程讲一下，也许可以做个反面教材。。。 8月16号开始看张宇的基础班视频结合高数十八讲。题外话: 考研过程中我会将自己的一些总结、规划、感悟什么的用备忘录记下来，虽然不知道为什么想记下来，但是就是想记下来- -。 大概看到八月底，我看完了基础班视频（这时候我认为自己打好了基础，其实。。。），中间因为急于求成，我放弃了边刷基础班视频边看十八讲（正确策略✔），选择赶进度直接刷基础班视频不总结不看十八讲（错误策略✘）。现在想来，当时应该先看十八讲，至少应该先简单看一遍，再结合基础班视频去学习，可能会更好。 然后9月初开始看线性代数的基础班视频，后来由于高数十八讲更吸引我，我中间停止了线性代数的学习，可以看到这一阶段我主要把精力放在数学上，以及英语背单词。单词真的强烈建议早背诵，并且要坚持。 9月18号之后我才又重新捡起线性代数学习。 流水账就不多说了（有些忘记了），后面就是学习完了基础班视频，就做的十八讲上的题，还有李永乐老师的线性代数资料的题（我已经连那本教材叫什么都忘记了 - -）。四个月下来，我数学可以说几乎没刷题，什么闭关修炼什么1800接力题典我都没时间去做，我能做的，就是去把往年的真题做完，等我做完的时候，已经12月份了。。。12月份做了李林的四套卷和六套卷，我的时间真的挤不出来了（我真的一滴都没有了.jpg） 题外话：看视频PC端的话我推荐用爱奇艺万能播放器，可以倍速播放。下视频的话一般都是通过百度云下载。舍得花钱的话我建议开个百度云超级会员，下载视频满速，节省时间。后期我买了个平板，结合百度云会员，直接在平板上点播，超爽。 英语英语我背单词用的是乐词app，背单词我没坚持到最后，中间断了一个月，11月底到12月，我又买了红宝书看，看不到一个星期也没坚持下去。。。。但是背单词真的效果显著，对于阅读提升很大，可能你去看唐迟的阅读讲解视频，会有帮助的，但是那是一些解题技巧方面，而如果你单词不背，连题目都没看懂，那也行不通。 阅读方面，我只做了真题。但是每一套真题我都刷的很认真，具体怎么刷，在知乎上有很多热心学姐有分享的帖子，大家去那看吧（我热心但是文笔有限实在写不出来）。我分享的是，不要觉得背了一大部分单词才去做真题，两者不矛盾，可以结合进行，做题的时候发现单词不会就去背，并且做题遇到的生词由于有上下文语境，你可以猜，猜不出来再去查，这样记忆深刻。关于做题方法，每个人都不同，我是看题干，再阅读，唐迟有关于这方面的讲解，兄弟姐妹们可以去看看，我不记得是什么视频了。 关于作文，我买了模板，算是被收了智商税吧，挺贵的呜呜呜。买的模板我最后不敢用，因为太多人买了，某不得学长的模板，后面卖了太多份，闲鱼上也很多。太多人用了，而且到了后面我自己已经有了一些对作文模板的判断，我认为这份模板不太行，还不如用我自己总结的，所以没用。我自己的模板是在B站看一个考研英语审卷老师的视频，不知道现在还有没有，叫胡小平，然后看他的视频，我总结一套，之后对着真题作文，撸了十套，觉得还不错，就用它了。 政治肖秀荣三件套我只用上了精讲精炼（其他两件套我甚至都忘了什么名了），买的涛涛的小黄书，还不错，但我没怎么背，时间实在不够。看视频，马哲跟着涛涛看，后面的不看视频，做1000题和精讲精练。B站有个不错的漂亮学姐（其实跟我同届），叫空卡。兄弟姐妹们有兴趣可以去看看，会分享一些政治的不错的学习方法和背诵方法，我看她视频长大的。 专业课专业课是数据结构，我看的是天勤的资料。视频没看，花在专业课的时间最少了，比政治还少吧。有个人特殊情况在，不建议学习。只看了一本天勤的资料，做了里面的题，看了往年的真题和答案，就没了。 关于心态每个人都有每个人的情况，我也是，上述的考研背景也说了我为什么考研。轻描淡写几句话，但是当时的心境谁又能懂。但是希望兄弟姐妹萌都有自己调节心态的方法，我自我安慰习惯了，看着天花板发呆，看着花花草草发呆，大冷天出去吹冷风散心，晚上出去跑步，偶尔看一部电影，找朋友瞎扯，但是既然决心考研，就不要放弃咯。","categories":[],"tags":[{"name":"考研","slug":"考研","permalink":"https://www.kelton.top/tags/%E8%80%83%E7%A0%94/"}]},{"title":"hexo博客搭建-NexT主题","slug":"hexo博客搭建-NexT主题","date":"2020-11-29T04:51:35.000Z","updated":"2021-03-05T10:42:59.552Z","comments":true,"path":"hexo/hexo博客搭建-NexT主题/","link":"","permalink":"https://www.kelton.top/hexo/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA-NexT%E4%B8%BB%E9%A2%98/","excerpt":"","text":"1 hexo简介 Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，生成静态网页。 —Hexo官网 2 hexo安装安装hexo需要先安装node.js和Git 2.1 安装node.js Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本 通过node.js官网下载安装版进行安装，选择14.15.1长期支持版 官网：Node.js 安装过程与普通软件安装没有差别，一路next。 2.2 安装Git通过Git官网下载Git安装版进行安装，安装版本2.29.2 官网：Git (git-scm.com) 2.3 正式安装hexo安装好node.js和Git之后就可以开始进行hexo的安装 1npm install -g hexo-cli 安装成功之后可以在cmd命令行中输入hexo，查看是否安装成功 出现如下提示则表示安装成功。 3 使用hexo搭建博客3.1 初始化在Windows中创建一个文件夹，作为想要搭建的博客的根目录，比如我的就是 D:\\blog\\hexo 在cmd中进入根目录下，使用如下命令初始化，该命令会在根目录下创建hexo所需的文件 1hexo init 创建完成之后的目录如下所示： 12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 其中_config.yml称为站点配置文件，对应的，themes/_config.yml称为主题配置文件。简单解释下两个配置文件。根目录下的_config.yml是对整个博客站点的内容进行设置。hexo的博客可以指定多种主题，主题的配置是通过themes/_config.yml进行设置的。 3.2 启动hexo使用如下命令可以启动hexo，进行快速效果预览。 1hexo server 可以看到出现如下提示： ) 浏览器访问localhost:4000可以看到博客搭建成功。 4. 使用NexT主题hexo可以通过指定不同的主题，达到更换博客风格的目的。hexo的主题可以访问Themes | Hexo 本次选用Text主题。 4.1 下载NexT主题我们通过Git来下载。 在cmd目录下进入根目录，使用如下命令。 1git clone https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next themes&#x2F;next 下载完毕后可以看到themes目录下多了一个next文件夹 hexo把所有的主题都放在了themes文件夹里面，所以通常的做法就是把想要使用的主题放到在themes目录下面，之后去站点配置文件里面进行主题的设置。 4.2 设置站点配置文件，进行主题更换打开站点配置文件_config.yml, 可以使用查找功能定位到themes关键字，修改为如下： 1theme: next 4.3 启动博客进行验证输入hexo server启动博客，可以看到主题已经更换为NexT主题。 下图的NexT主题经过了其他设置，所以你的主题可能和我看起来有点不一样","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"https://www.kelton.top/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.kelton.top/tags/hexo/"}]}],"categories":[{"name":"love","slug":"love","permalink":"https://www.kelton.top/categories/love/"},{"name":"设计模式","slug":"设计模式","permalink":"https://www.kelton.top/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"},{"name":"博客搭建","slug":"博客搭建","permalink":"https://www.kelton.top/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"Abigail","slug":"Abigail","permalink":"https://www.kelton.top/tags/Abigail/"},{"name":"多目标进化优化","slug":"多目标进化优化","permalink":"https://www.kelton.top/tags/%E5%A4%9A%E7%9B%AE%E6%A0%87%E8%BF%9B%E5%8C%96%E4%BC%98%E5%8C%96/"},{"name":"Java","slug":"Java","permalink":"https://www.kelton.top/tags/Java/"},{"name":"设计模式","slug":"设计模式","permalink":"https://www.kelton.top/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"},{"name":"hexo","slug":"hexo","permalink":"https://www.kelton.top/tags/hexo/"},{"name":"pure","slug":"pure","permalink":"https://www.kelton.top/tags/pure/"},{"name":"考研","slug":"考研","permalink":"https://www.kelton.top/tags/%E8%80%83%E7%A0%94/"}]}